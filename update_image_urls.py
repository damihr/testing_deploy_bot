#!/usr/bin/env python3
"""
Update Image URLs in Excel
–û–±–Ω–æ–≤–ª—è–µ—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ Excel —Ñ–∞–π–ª–µ –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
"""

import pandas as pd
import os
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def get_public_ip():
    """–ü–æ–ª—É—á–∏—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π IP –∞–¥—Ä–µ—Å"""
    try:
        import requests
        response = requests.get('https://api.ipify.org', timeout=5)
        return response.text.strip()
    except:
        return "YOUR_IP"

def update_image_urls(excel_file='–†–∞—Å—Ö–æ–¥–Ω–∏–∫–∏ 9 –æ–∫—Ç—è–±—Ä—è.xlsx', server_port=8080):
    """–û–±–Ω–æ–≤–∏—Ç—å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ Excel —Ñ–∞–π–ª–µ"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π IP
        public_ip = get_public_ip()
        base_url = f"http://{public_ip}:{server_port}"
        
        logger.info(f"üåê Using base URL: {base_url}")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º Excel —Ñ–∞–π–ª
        df = pd.read_excel(excel_file)
        logger.info(f"üìä Loaded Excel file with {len(df)} rows")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–æ–Ω–∫–∏ ImageURL
        if 'ImageURL' not in df.columns:
            logger.error("‚ùå ImageURL column not found in Excel file")
            return False
        
        updated_count = 0
        
        # –û–±–Ω–æ–≤–ª—è–µ–º URL –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
        for index, row in df.iterrows():
            if pd.notna(row['‚Ññ']) and pd.notna(row['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ']):
                instrument_number = int(row['‚Ññ'])
                image_filename = f"image{instrument_number}.png"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                if os.path.exists(image_filename):
                    image_url = f"{base_url}/{image_filename}"
                    df.at[index, 'ImageURL'] = image_url
                    updated_count += 1
                    logger.info(f"‚úÖ Updated URL for instrument #{instrument_number}: {image_url}")
                else:
                    logger.warning(f"‚ö†Ô∏è Image not found: {image_filename}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        df.to_excel(excel_file, index=False)
        logger.info(f"üíæ Saved updated Excel file")
        logger.info(f"üì∏ Updated {updated_count} image URLs")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå Error updating image URLs: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üñºÔ∏è  Image URL Updater for Bes Saiman Inventory")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π IP
    public_ip = get_public_ip()
    print(f"üåê Your public IP: {public_ip}")
    print(f"üì∏ Image server should be running on: http://{public_ip}:8080")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    image_files = [f for f in os.listdir('.') if f.startswith('image') and f.endswith(('.png', '.jpg', '.jpeg'))]
    print(f"üìÅ Found {len(image_files)} image files")
    
    if len(image_files) == 0:
        print("‚ùå No image files found!")
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º URL
    print(f"\nüîÑ Updating image URLs in Excel...")
    success = update_image_urls()
    
    if success:
        print(f"\n‚úÖ Image URLs updated successfully!")
        print(f"üåê Images are now accessible at: http://{public_ip}:8080/image[N].png")
        print(f"üì± Telegram bot will now send images via URLs instead of local files")
    else:
        print(f"\n‚ùå Failed to update image URLs")

if __name__ == "__main__":
    main()
